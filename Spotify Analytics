# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

#Then I created and answered the following questions regarding the data.

-- #1. Name the top 10 artists with the highest popularity.

SELECT artist_name, track_name, popularity FROM Spotifydata ORDER BY popularity desc LIMIT 10;

-- #2. Which artists made the longest songs with above average dancibility and tempo?

SELECT ROUND(avg(danceability),2), ROUND(avg(tempo),0)
FROM Spotifydata;

SELECT artist_name, track_name, danceability, tempo, duration_ms
FROM Spotifydata
WHERE danceability >= 0.68
AND tempo >= 121
ORDER BY duration_ms desc;


-- #3. How many artists are on the list more than once? Twice?

SELECT * FROM spotifydata GROUP BY artist_name HAVING COUNT(artist_name) >=2;
SELECT * FROM spotifydata GROUP BY artist_name HAVING COUNT(artist_name) >=3;
